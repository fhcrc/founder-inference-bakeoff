<?xml version="1.0" standalone="yes"?>

<!-- Generated by BEAUTi v1.8.0                                              -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.bio.ed.ac.uk/                                        -->

<!-- Generated by {{user}} on {{date}} -->
<!-- command line:	{command} -->
<!-- working dir:	{{workdir}} -->

<beast>
  <!-- The list of taxa to be analysed (can also include dates/ages).          -->
  <!-- ntax=${taxon_count} -->


  <!-- The overall taxa includes all samples, plus posssibly an outgroup  -->
  <taxa id="taxa">
    {% for taxon in outgroup -%}
    <taxon id="{{taxon.id}}">
      <date value="0" direction="forwards" units="days"/>
    </taxon>
    {%-endfor%}
    {% for pid, patient in patients.iteritems() -%}
    {% for vid,visit in patient.iteritems() -%}
    {% for taxon in visit.taxa -%}
    <taxon id="{{taxon.id}}">
      <date value="{{visit.date | dayofyear }}" direction="forwards" units="years"/>
    </taxon>
    {% endfor%}
    {%-endfor%}
    {%-endfor%}
  </taxa>

  <!-- Make a taxa containing just patient samples, without the outgroup. -->
  <!-- We will infer the ancestral sequence at the root of this taxa. -->
  <taxa id="taxa(patients)">
    {% for pid, patient in patients.iteritems() -%}
    {% for vid,visit in patient.iteritems() -%}
    {% for taxon in visit.taxa -%}
    <taxon idref="{{taxon.id}}"/>
    {% endfor%}
    {%-endfor%}
    {%-endfor%}
  </taxa>

  <!-- Make seperate taxa for each patent visit. -->
  <!-- Later we will mark some (but not al) of these tax as monophyletic. -->
  {% for pid,patient in patients.iteritems() -%}
  {% for vid,visit in patient.iteritems() -%}
  <taxa id="taxa({{pid}}.{{vid}})">
    {% for taxon in visit.taxa -%}
    <taxon idref="{{taxon.id}}"/>
    {% endfor%}
  </taxa>
  {%-endfor%}
  {%-endfor%}


  <!-- The sequence alignment (each sequence refers to a taxon above).         -->
  <!-- ntax=${taxon_count} nchar=${site_count} -->
  <alignment id="alignment" dataType="nucleotide">
    {% for taxon in outgroup -%}
    <sequence>
      <taxon idref="{{taxon.id}}"/>
      {{taxon.seq}}
    </sequence>
    {%-endfor%}
    {% for pid,patient in patients.iteritems() -%}
    {% for vid,visit in patient.iteritems() -%}
    {% for taxon in visit.taxa -%}
    <sequence>
      <taxon idref="{{taxon.id}}"/>
      {{taxon.seq}}
    </sequence>
    {% endfor%}
    {%- endfor%}
    {%- endfor%}
  </alignment>

  <!-- The unique patterns from 1 to end                                       -->
  <patterns id="patterns" from="1" strip="false" unique="false">
    <alignment idref="alignment"/>
  </patterns>

  <!-- A prior assumption that the population size has grown exponentially     -->
  <!-- throughout the time spanned by the genealogy.                           -->
  <exponentialGrowth id="exponential" units="years">
    <populationSize>
      <parameter id="exponential.popSize" value="3.1" lower="0.0"/>
    </populationSize>
    <growthRate>
      <parameter id="exponential.growthRate" value="0.0031"/>
    </growthRate>
  </exponentialGrowth>
  
  <!-- define a coalescent tree that is consistent with the prior on tree height -->
  <coalescentTree id="startingTree" rootHeight="{{((latest_timepoint-earliest_timepoint)+timedelta(days=2))| deltayears}}"> 
    <taxa idref="taxa"/>
    <exponentialGrowth idref="exponential"/>
  </coalescentTree>

  <!-- Generate a tree model                                                   -->
  <treeModel id="treeModel">
    <coalescentTree idref="startingTree"/>
    <rootHeight>
      <parameter id="treeModel.rootHeight"/>
    </rootHeight>
    <nodeHeights internalNodes="true">
      <parameter id="treeModel.internalNodeHeights"/>
    </nodeHeights>
    <nodeHeights internalNodes="true" rootNode="true">
      <parameter id="treeModel.allInternalNodeHeights"/>
    </nodeHeights>
  </treeModel>

  <tmrcaStatistic id="tmrca">
    <mrca>
      <taxa idref="taxa"/>
    </mrca>
    <treeModel idref="treeModel"/>
  </tmrcaStatistic>

  <!-- Generate a coalescent likelihood                                        -->
  <coalescentLikelihood id="coalescent">
    <model>
      <exponentialGrowth idref="exponential"/>
    </model>
    <populationTree>
      <treeModel idref="treeModel"/>
    </populationTree>
  </coalescentLikelihood>

  <!-- The strict clock (Uniform rates across branches)                        -->
  <strictClockBranchRates id="branchRates">
    <rate>
      <parameter id="clock.rate" value="1.3E-5" lower="0.0"/>
    </rate>
  </strictClockBranchRates>

  <rateStatistic id="meanRate" name="meanRate" mode="mean" internal="true" external="true">
    <treeModel idref="treeModel"/>
    <strictClockBranchRates idref="branchRates"/>
  </rateStatistic>
  <rateStatistic id="coefficientOfVariation" name="coefficientOfVariation" mode="coefficientOfVariation" internal="true" external="true">
    <treeModel idref="treeModel"/>
    <strictClockBranchRates idref="branchRates"/>
  </rateStatistic>
  <rateCovarianceStatistic id="covariance" name="covariance">
    <treeModel idref="treeModel"/>
    <strictClockBranchRates idref="branchRates"/>
  </rateCovarianceStatistic>

  <!-- The HKY substitution model (Hasegawa, Kishino & Yano, 1985)             -->
  <HKYModel id="hky">
    <frequencies>
      <frequencyModel dataType="nucleotide">
	<frequencies>
	  <parameter id="frequencies" value="0.25 0.25 0.25 0.25"/>
	</frequencies>
      </frequencyModel>
    </frequencies>
    <kappa>
      <parameter id="kappa" value="2.0" lower="0.0"/>
    </kappa>
  </HKYModel>

  <!-- site model                                                              -->
  <siteModel id="siteModel">
    <substitutionModel>
      <HKYModel idref="hky"/>
    </substitutionModel>
  </siteModel>

  <!-- Likelihood for tree given sequence data                                 -->
  <ancestralTreeLikelihood id="treeLikelihood" useAmbiguities="false" stateTagName="states">
    <patterns idref="patterns"/>
    <treeModel idref="treeModel"/>
    <siteModel idref="siteModel"/>
    <strictClockBranchRates idref="branchRates"/>
  </ancestralTreeLikelihood>


  <!-- Define operators                                                        -->
  <operators id="operators" optimizationSchedule="default">
    <scaleOperator scaleFactor="0.75" weight="0.1">
      <parameter idref="kappa"/>
    </scaleOperator>
    <deltaExchange delta="0.01" weight="0.1">
      <parameter idref="frequencies"/>
    </deltaExchange>
    <scaleOperator scaleFactor="0.75" weight="3">
      <parameter idref="clock.rate"/>
    </scaleOperator>
    <subtreeSlide size="180.0" gaussian="true" weight="15">
      <treeModel idref="treeModel"/>
    </subtreeSlide>
    <narrowExchange weight="15">
      <treeModel idref="treeModel"/>
    </narrowExchange>
    <wideExchange weight="3">
      <treeModel idref="treeModel"/>
    </wideExchange>
    <wilsonBalding weight="3">
      <treeModel idref="treeModel"/>
    </wilsonBalding>
    <scaleOperator scaleFactor="0.75" weight="3">
      <parameter idref="treeModel.rootHeight"/>
    </scaleOperator>
    <uniformOperator weight="30">
      <parameter idref="treeModel.internalNodeHeights"/>
    </uniformOperator>
    <scaleOperator scaleFactor="0.75" weight="3">
      <parameter idref="exponential.popSize"/>
    </scaleOperator>
    <randomWalkOperator windowSize="1.0" weight="3">
      <parameter idref="exponential.growthRate"/>
    </randomWalkOperator>
    <upDownOperator scaleFactor="0.75" weight="3">
      <up>
	<parameter idref="clock.rate"/>
      </up>
      <down>
	<parameter idref="treeModel.allInternalNodeHeights"/>
      </down>
    </upDownOperator>
  </operators>

  <!-- Define MCMC                                                             -->
  <mcmc id="mcmc" chainLength="400000" autoOptimize="true" operatorAnalysis="10.ops">
    <posterior id="posterior">
      <prior id="prior">
	<uniformPrior
	    lower="{{(latest_timepoint-earliest_timepoint)| deltayears}}" upper="{{((latest_timepoint-earliest_timepoint)+timedelta(days=120)) | deltayears}}">
	  <parameter idref="treeModel.rootHeight"/>
	</uniformPrior >
	<logNormalPrior mean="1.0" stdev="1.25" offset="0.0" meanInRealSpace="false">
	  <parameter idref="kappa"/>
	</logNormalPrior>
	<uniformPrior lower="0.0" upper="1.0">
	  <parameter idref="frequencies"/>
	</uniformPrior>
	<logNormalPrior mean="1.3E-5" stdev="1.0" offset="0.0" meanInRealSpace="true">
	  <parameter idref="clock.rate"/>
	</logNormalPrior>
	<oneOnXPrior>
	  <parameter idref="exponential.popSize"/>
	</oneOnXPrior>
	<laplacePrior mean="0.0" scale="2.971077539347156">
	  <parameter idref="exponential.growthRate"/>
	</laplacePrior>
	<coalescentLikelihood idref="coalescent"/>
      </prior>
      <likelihood id="likelihood">
	<ancestralTreeLikelihood idref="treeLikelihood"/>
      </likelihood>
    </posterior>
    <operators idref="operators"/>

    <!-- write log to screen                                                     -->
    <log id="screenLog" logEvery="10000">
      <column label="Posterior" dp="4" width="12">
	<posterior idref="posterior"/>
      </column>
      <column label="Prior" dp="4" width="12">
	<prior idref="prior"/>
      </column>
      <column label="Likelihood" dp="4" width="12">
	<likelihood idref="likelihood"/>
      </column>
      <column label="rootHeight" sf="6" width="12">
	<parameter idref="treeModel.rootHeight"/>
      </column>
      <column label="clock.rate" sf="6" width="12">
	<parameter idref="clock.rate"/>
      </column>
      <parameter idref="exponential.popSize"/>
      <parameter idref="exponential.growthRate"/>
    </log>

    <!-- write log to file -->
    <log id="fileLog" logEvery="400" fileName="beastout.log" overwrite="false">
      <posterior idref="posterior"/>
      <prior idref="prior"/>
      <likelihood idref="likelihood"/>
      <parameter idref="treeModel.rootHeight"/>
      <parameter idref="exponential.popSize"/>
      <parameter idref="exponential.growthRate"/>
      <parameter idref="kappa"/>
      <parameter idref="frequencies"/>
      <parameter idref="clock.rate"/>
      <treeLikelihood idref="treeLikelihood"/>
      <coalescentLikelihood idref="coalescent"/>
    </log>

    write tree log to file
    <logTree id="treeFileLog" logEvery="400" nexusFormat="true" fileName="beastout.trees" sortTranslationTable="true">
      <treeModel idref="treeModel"/>
      <trait name="rate" tag="rate">
	<strictClockBranchRates idref="branchRates"/>
      </trait>
      <posterior idref="posterior"/>
    </logTree>

    <!-- Ancestral state reconstruction -->

    <!-- Infer ancestral state at the mrca of all patients other than the -->
    <!-- first. -->

    
    <log id="traitFileLog" logEvery="400" fileName="ancestralSequences.log">
      <ancestralTrait name="trait" traitName="states">
	<treeModel idref="treeModel"/>
	<ancestralTreeLikelihood idref="treeLikelihood"/>
	<mrca>
	  <taxa idref="taxa(patients)"/>
	</mrca>
      </ancestralTrait>
    </log>

  </mcmc>
  <report>
    <property name="timer">
      <mcmc idref="mcmc"/>
    </property>
  </report>
</beast>

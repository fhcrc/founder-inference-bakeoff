<?xml version="1.0" standalone="yes"?>


<!-- Generated by BEAUTi v1.8.0                                              -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.bio.ed.ac.uk/                                        -->

<!-- Generated by {{user}} on {{date}} -->
<!-- command line:	{command} -->
<!-- working dir:	{{workdir}} -->

<beast>

  <!-- The overall taxa includes all samples, plus posssibly an outgroup  -->
  <taxa id="taxa">
    {% for grp in seq_groups -%}
    {% for date,sample in grp.bydate.iteritems() -%}
    {% for taxon in sample.taxa -%}
    <taxon id="{{taxon.id}}">
      <date value="{{sample.date | dayofyear }}" direction="forwards" units="years"/>
    </taxon>
    {% endfor%}
    {%-endfor%}
    {%-endfor%}
  </taxa>


  <!-- Make seperate taxa for each sample file. -->
  {% for grp in seq_groups -%}
  <taxa id="taxa({{grp.basename}})">
    {% for date,sample in grp.bydate.iteritems() -%}
    {% for taxon in sample.taxa -%}
    <taxon idref="{{taxon.id}}"/>
    {% endfor-%}
    {%endfor-%}
  </taxa>
  {%endfor%}


  <!-- The sequence alignment (each sequence refers to a taxon above).         -->
  {% for grp in seq_groups -%}
  <alignment id="alignment({{grp.basename}})" dataType="nucleotide">
    {% for date,sample in grp.bydate.iteritems() -%}
    {% for taxon in sample.taxa -%}
    <sequence>
      <taxon idref="{{taxon.id}}"/>
      {{taxon.seq}}
    </sequence>
    {% endfor%}
    {%- endfor%}
  </alignment>
  {%- endfor%}

  {% for grp in seq_groups -%}
  <!-- The unique patterns from 1 to end                                     -->
  <patterns id="patterns({{grp.basename}})" from="1" strip="false" unique="false">
    <alignment idref="alignment({{grp.basename}})"/>
  </patterns>
  {%- endfor%}

  <!-- A prior assumption that the population size has grown exponentially     -->
  <!-- throughout the time spanned by the genealogy.                           -->
  <exponentialGrowth id="exponential" units="years">
    <populationSize>
      <parameter id="exponential.popSize" value="3.1" lower="0.0"/>
    </populationSize>
    <growthRate>
      <!-- Initial value of exponential.growthRate -->
      {% if exponential_growthRate is defined %}
      <!-- exponential.growthRate is fixed value based on previously run posterior. -->
      <parameter id="exponential.growthRate"
		 value="{{exponential_growthRate}}"/>
      {% else %}
      <!-- exponential.growthRate is constrained only by prior distribution -->
      <parameter id="exponential.growthRate" value="0.0031"/>
      {% endif %}
    </growthRate>
  </exponentialGrowth>
  
  {% for grp in seq_groups -%}
  <!-- define a coalescent tree that is consistent with the prior on tree height -->
  <coalescentTree id="startingTree({{grp.basename}})" rootHeight="{{((grp.latest()-grp.earliest())+timedelta(days=2))| deltayears}}"> 
    <taxa idref="taxa({{grp.basename}})"/>
    <exponentialGrowth idref="exponential"/>
  </coalescentTree>
  {%- endfor%}

  {% for grp in seq_groups -%}
  <!-- Generate a tree model                                                   -->
  <treeModel id="treeModel({{grp.basename}})">
    <coalescentTree idref="startingTree({{grp.basename}})"/>
    <rootHeight>
      <parameter id="rootHeight({{grp.basename}})"/>
    </rootHeight>
    <nodeHeights internalNodes="true">
      <parameter id="internalNodeHeights({{grp.basename}})"/>
    </nodeHeights>
    <nodeHeights internalNodes="true" rootNode="true">
      <parameter id="allInternalNodeHeights({{grp.basename}})"/>
    </nodeHeights>
  </treeModel>
  {%- endfor%}

  {% for grp in seq_groups -%}
  <!-- Generate a coalescent likelihood                                        -->
  <coalescentLikelihood id="coalescent({{grp.basename}})">
    <model>
      <exponentialGrowth idref="exponential"/>
    </model>
    <populationTree>
      <treeModel idref="treeModel({{grp.basename}})"/>
    </populationTree>
  </coalescentLikelihood>
  {%- endfor%}

  <!-- The strict clock (Uniform rates across branches)                        -->
  <strictClockBranchRates id="branchRates">
    <rate>
      <parameter id="clock.rate" value="{{clock_rate|default(default_rate)}}" lower="0.0"/>
    </rate>
  </strictClockBranchRates>
  
  {% for grp in seq_groups -%}
  <rateStatistic id="meanRate({{grp.basename}})" name="bakeoff_analysis_rv217_40265_1M_NFLG.meanRate" mode="mean" internal="true" external="true">
    <treeModel idref="treeModel({{grp.basename}})"/>
    <strictClockBranchRates idref="branchRates"/>
  </rateStatistic>
  {%- endfor%}

  <!-- The HKY substitution model (Hasegawa, Kishino & Yano, 1985)             -->
  <HKYModel id="hky">
    <frequencies>
      <frequencyModel dataType="nucleotide">
	<frequencies>
	  <parameter id="frequencies" value="0.25 0.25 0.25 0.25"/>
	</frequencies>
      </frequencyModel>
    </frequencies>
    <kappa>
      <parameter id="kappa" value="2.0" lower="0.0"/>
    </kappa>
  </HKYModel>

  <!-- site model                                                              -->
  <siteModel id="siteModel">
    <substitutionModel>
      <HKYModel idref="hky"/>
    </substitutionModel>
  </siteModel>

  <!-- Likelihood for tree given sequence data                                 -->
  {% for grp in seq_groups -%}
  <treeLikelihood id="treeLikelihood({{grp.basename}})" useAmbiguities="false">
    <patterns idref="patterns({{grp.basename}})"/>
    <treeModel idref="treeModel({{grp.basename}})"/>
    <siteModel idref="siteModel"/>
    <strictClockBranchRates idref="branchRates"/>
  </treeLikelihood>
  {%- endfor%}


  <!-- Define operators                                                        -->
  <operators id="operators" optimizationSchedule="default">
    <!-- Tree operators -->
    {% for grp in seq_groups -%}
    <subtreeSlide size="1.0" gaussian="true" weight="150">
      <treeModel idref="treeModel({{grp.basename}})"/>
    </subtreeSlide>
    <narrowExchange weight="150">
      <treeModel idref="treeModel({{grp.basename}})"/>
    </narrowExchange>
    <wideExchange weight="30">
      <treeModel idref="treeModel({{grp.basename}})"/>
    </wideExchange>
    <wilsonBalding weight="30">
      <treeModel idref="treeModel({{grp.basename}})"/>
    </wilsonBalding>
    <scaleOperator scaleFactor="0.75" weight="30">
      <parameter idref="rootHeight({{grp.basename}})"/>
    </scaleOperator>
    <uniformOperator weight="300">
      <parameter idref="internalNodeHeights({{grp.basename}})"/>
    </uniformOperator>
    {%- endfor%}


    <scaleOperator scaleFactor="0.75" weight="0.1">
      <parameter idref="kappa"/>
    </scaleOperator>
    <deltaExchange delta="0.01" weight="0.1">
      <parameter idref="frequencies"/>
    </deltaExchange>
    <scaleOperator scaleFactor="0.75" weight="3">
      <parameter idref="exponential.popSize"/>
    </scaleOperator>
    {% if exponential_growthRate is not defined %}
    <!-- exponential.growthRate is NOT fixed - define an operator to
	 adjust it. -->
    <randomWalkOperator windowSize="1.0" weight="3">
      <parameter idref="exponential.growthRate"/>
    </randomWalkOperator>
    {% else %}
    <!-- exponential.growthRate is fixed - do not define an operator
	 to adjust it.  -->
    <!-- <randomWalkOperator windowSize="1.0" weight="3"> -->
    <!--   <parameter idref="exponential.growthRate"/> -->
    <!-- </randomWalkOperator> -->

    {% endif %}

    
    {% if clock_rate is not defined %}
    <!-- clock.rate is not fixed - this operators will adjust it. -->
    <scaleOperator scaleFactor="0.75" weight="3">
      <parameter idref="clock.rate"/>
    </scaleOperator>
    {% else %}
    <!-- clock.rate is fixed - do not define an operator to adjust it. -->
    <!-- <scaleOperator scaleFactor="0.75" weight="3"> -->
    <!-- 	  <parameter idref="clock.rate"/> -->
    <!-- </scaleOperator> -->
    {% endif %}

    {% for grp in seq_groups -%}
    {% if clock_rate is not defined %}
    <upDownOperator scaleFactor="0.75" weight="3">
      <up>
	<parameter idref="clock.rate"/>
      </up>
      <down>
	<parameter idref="allInternalNodeHeights({{grp.basename}})"/>
      </down>
    </upDownOperator>
    {% else %}
    <!-- clock.rate is fixed - do not define an operator to adjust it. -->
    <!-- <upDownOperator scaleFactor="0.75" weight="3"> -->
    <!--   <up> -->
    <!-- 	<parameter idref="clock.rate"/> -->
    <!--   </up> -->
    <!--   <down> -->
    <!-- 	<parameter idref="allInternalNodeHeights({{grp.basename}})"/> -->
    <!--   </down> -->
    <!-- </upDownOperator> -->
    {% endif %}
    {%- endfor%}

  </operators>

  <!-- Define MCMC                                                             -->
  <mcmc id="mcmc" chainLength="5000000" autoOptimize="true">
    <posterior id="posterior">
      <prior id="prior">
	{% if toi is defined %}
	<!-- Uniform prior on tree Height is defined  -->
	<uniformPrior
	    lower="{{toi[0]|deltayears}}"
	    upper="{{toi[1]|deltayears}}">
	  <parameter idref="treeModel.rootHeight"/>
	</uniformPrior >
	{% else %}
	<!-- Prior treeModel.rootHeight NOT defined. -->
	{% endif %}
	<logNormalPrior mean="1.0" stdev="1.25" offset="0.0" meanInRealSpace="false">
	  <parameter idref="kappa"/>
	</logNormalPrior>
	<uniformPrior lower="0.0" upper="1.0">
	  <parameter idref="frequencies"/>
	</uniformPrior>
	<logNormalPrior mean="{{clock_rate|default(default_rate)}}" stdev="1.0" offset="0.0" meanInRealSpace="true">
	  <parameter idref="clock.rate"/>
	</logNormalPrior>
	<oneOnXPrior>
	  <parameter idref="exponential.popSize"/>
	</oneOnXPrior>
	<laplacePrior mean="0.0" scale="2.971077539347156">
	  <parameter idref="exponential.growthRate"/>
	</laplacePrior>
	{% for grp in seq_groups -%}
	<coalescentLikelihood idref="coalescent({{grp.basename}})"/>
	{%- endfor%}

      </prior>
      <likelihood id="likelihood">
	{% for grp in seq_groups -%}
	<treeLikelihood idref="treeLikelihood({{grp.basename}})"/>
	{%- endfor%}
	<strictClockBranchRates idref="branchRates"/>
      </likelihood>
    </posterior>
    <operators idref="operators"/>

    <!-- write log to screen                                                     -->
    <log id="screenLog" logEvery="10000">
      <column label="Posterior" dp="4" width="12">
	<posterior idref="posterior"/>
      </column>
      <column label="Prior" dp="4" width="12">
	<prior idref="prior"/>
      </column>
      <column label="Likelihood" dp="4" width="12">
	<likelihood idref="likelihood"/>
      </column>
      {% for grp in seq_groups -%}
      <column label="rootHeight.{{grp.basename}}" sf="6" width="12">
	<parameter idref="rootHeight({{grp.basename}})"/>
      </column>
      {%- endfor%}
      <column label="clock.rate" sf="6" width="12">
	<parameter idref="clock.rate"/>
      </column>
      <parameter idref="exponential.popSize"/>
      <parameter idref="exponential.growthRate"/>
    </log>

    <!-- write log to file -->
    <log id="fileLog" logEvery="400" fileName="beastout.log" overwrite="false">
      <posterior idref="posterior"/>
      <prior idref="prior"/>
      <likelihood idref="likelihood"/>
      {% for grp in seq_groups -%}
      <parameter idref="rootHeight({{grp.basename}})"/>
      {%- endfor%}
      <parameter idref="exponential.popSize"/>
      <parameter idref="exponential.growthRate"/>
      <parameter idref="kappa"/>
      <parameter idref="frequencies"/>
      <parameter idref="clock.rate"/>
      {% for grp in seq_groups -%}
      <treeLikelihood idref="treeLikelihood({{grp.basename}})"/>
      {%- endfor%}
      {% for grp in seq_groups -%}
      <coalescentLikelihood idref="coalescent({{grp.basename}})"/>
      {%- endfor%}
    </log>

  </mcmc>
  <report>
    <property name="timer">
      <mcmc idref="mcmc"/>
    </property>
  </report>
</beast>
